services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
      TZ: Asia/Shanghai
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db_network
    secrets:
      - db_root_password
      - db_password

  app:
    image: academic-express/backend
    build:
      context: backend
      dockerfile: Dockerfile
      args:
        - PIP_EXTRA_ARGS=${PIP_EXTRA_ARGS:-}
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD_FILE: /run/secrets/db_password
      DB_HOST: mysql
      DB_PORT: 3306
      SECRET_KEY_FILE: /run/secrets/secret_key
      FEED_ENGINE_URL: ${FEED_ENGINE_URL}
      FEED_ENGINE_TOKEN_FILE: /run/secrets/feed_engine_token
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - db_network
      - app_network
    secrets:
      - db_password
      - secret_key

  frontend:
    image: academic-express/frontend
    build:
      context: frontend
      dockerfile: Dockerfile

  nginx:
    image: academic-express/nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - app
      - frontend
    networks:
      - app_network

networks:
  app_network:
  db_network:

secrets:
  db_root_password:
    file: ./secrets/db_root_password
  db_password:
    file: ./secrets/db_password
  secret_key:
    file: ./secrets/secret_key
  feed_engine_token:
    file: ./secrets/feed_engine_token

volumes:
  db_data:
