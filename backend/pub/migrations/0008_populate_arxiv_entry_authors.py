# Generated by Django 5.1.2 on 2024-11-25 13:28

from django.db import migrations
from tqdm import tqdm

from ..utils import normalize_author


def populate_arxiv_entry_authors(apps, schema_editor):
    ArxivEntry = apps.get_model('pub', 'ArxivEntry')
    ArxivEntryAuthor = apps.get_model('pub', 'ArxivEntryAuthor')

    author_instances = []

    for entry in tqdm(ArxivEntry.objects.all(), desc='Populating ArXiv entry authors'):
        for author in entry.authors:
            normalized = normalize_author(author["name"], author.get("affiliation"))
            instance = ArxivEntryAuthor(arxiv_entry=entry, **normalized)
            author_instances.append(instance)

        if len(author_instances) >= 1000:
            ArxivEntryAuthor.objects.bulk_create(author_instances)
            author_instances.clear()

    if author_instances:
        ArxivEntryAuthor.objects.bulk_create(author_instances)


class Migration(migrations.Migration):

    dependencies = [
        ('pub', '0007_arxiventryauthor'),
    ]

    operations = [
        migrations.RunPython(populate_arxiv_entry_authors),
    ]
